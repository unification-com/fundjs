import * as _114 from "./abci/types";
import * as _115 from "./crypto/keys";
import * as _116 from "./crypto/proof";
import * as _117 from "./libs/bits/types";
import * as _118 from "./p2p/types";
import * as _119 from "./types/block";
import * as _120 from "./types/evidence";
import * as _121 from "./types/params";
import * as _122 from "./types/types";
import * as _123 from "./types/validator";
import * as _124 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _114.CheckTxType;
        checkTxTypeToJSON(object: _114.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _114.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _114.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _114.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _114.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _114.EvidenceType;
        evidenceTypeToJSON(object: _114.EvidenceType): string;
        CheckTxType: typeof _114.CheckTxType;
        CheckTxTypeSDKType: typeof _114.CheckTxType;
        CheckTxTypeAmino: typeof _114.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _114.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _114.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _114.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _114.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _114.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _114.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _114.EvidenceType;
        EvidenceTypeSDKType: typeof _114.EvidenceType;
        EvidenceTypeAmino: typeof _114.EvidenceType;
        Request: {
            typeUrl: string;
            is(o: any): o is _114.Request;
            isSDK(o: any): o is _114.RequestSDKType;
            isAmino(o: any): o is _114.RequestAmino;
            encode(message: _114.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.Request;
            fromPartial(object: Partial<_114.Request>): _114.Request;
            fromAmino(object: _114.RequestAmino): _114.Request;
            toAmino(message: _114.Request): _114.RequestAmino;
            fromAminoMsg(object: _114.RequestAminoMsg): _114.Request;
            fromProtoMsg(message: _114.RequestProtoMsg): _114.Request;
            toProto(message: _114.Request): Uint8Array;
            toProtoMsg(message: _114.Request): _114.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            is(o: any): o is _114.RequestEcho;
            isSDK(o: any): o is _114.RequestEchoSDKType;
            isAmino(o: any): o is _114.RequestEchoAmino;
            encode(message: _114.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestEcho;
            fromPartial(object: Partial<_114.RequestEcho>): _114.RequestEcho;
            fromAmino(object: _114.RequestEchoAmino): _114.RequestEcho;
            toAmino(message: _114.RequestEcho): _114.RequestEchoAmino;
            fromAminoMsg(object: _114.RequestEchoAminoMsg): _114.RequestEcho;
            fromProtoMsg(message: _114.RequestEchoProtoMsg): _114.RequestEcho;
            toProto(message: _114.RequestEcho): Uint8Array;
            toProtoMsg(message: _114.RequestEcho): _114.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            is(o: any): o is _114.RequestFlush;
            isSDK(o: any): o is _114.RequestFlushSDKType;
            isAmino(o: any): o is _114.RequestFlushAmino;
            encode(_: _114.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestFlush;
            fromPartial(_: Partial<_114.RequestFlush>): _114.RequestFlush;
            fromAmino(_: _114.RequestFlushAmino): _114.RequestFlush;
            toAmino(_: _114.RequestFlush): _114.RequestFlushAmino;
            fromAminoMsg(object: _114.RequestFlushAminoMsg): _114.RequestFlush;
            fromProtoMsg(message: _114.RequestFlushProtoMsg): _114.RequestFlush;
            toProto(message: _114.RequestFlush): Uint8Array;
            toProtoMsg(message: _114.RequestFlush): _114.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            is(o: any): o is _114.RequestInfo;
            isSDK(o: any): o is _114.RequestInfoSDKType;
            isAmino(o: any): o is _114.RequestInfoAmino;
            encode(message: _114.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestInfo;
            fromPartial(object: Partial<_114.RequestInfo>): _114.RequestInfo;
            fromAmino(object: _114.RequestInfoAmino): _114.RequestInfo;
            toAmino(message: _114.RequestInfo): _114.RequestInfoAmino;
            fromAminoMsg(object: _114.RequestInfoAminoMsg): _114.RequestInfo;
            fromProtoMsg(message: _114.RequestInfoProtoMsg): _114.RequestInfo;
            toProto(message: _114.RequestInfo): Uint8Array;
            toProtoMsg(message: _114.RequestInfo): _114.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            is(o: any): o is _114.RequestSetOption;
            isSDK(o: any): o is _114.RequestSetOptionSDKType;
            isAmino(o: any): o is _114.RequestSetOptionAmino;
            encode(message: _114.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestSetOption;
            fromPartial(object: Partial<_114.RequestSetOption>): _114.RequestSetOption;
            fromAmino(object: _114.RequestSetOptionAmino): _114.RequestSetOption;
            toAmino(message: _114.RequestSetOption): _114.RequestSetOptionAmino;
            fromAminoMsg(object: _114.RequestSetOptionAminoMsg): _114.RequestSetOption;
            fromProtoMsg(message: _114.RequestSetOptionProtoMsg): _114.RequestSetOption;
            toProto(message: _114.RequestSetOption): Uint8Array;
            toProtoMsg(message: _114.RequestSetOption): _114.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            is(o: any): o is _114.RequestInitChain;
            isSDK(o: any): o is _114.RequestInitChainSDKType;
            isAmino(o: any): o is _114.RequestInitChainAmino;
            encode(message: _114.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestInitChain;
            fromPartial(object: Partial<_114.RequestInitChain>): _114.RequestInitChain;
            fromAmino(object: _114.RequestInitChainAmino): _114.RequestInitChain;
            toAmino(message: _114.RequestInitChain): _114.RequestInitChainAmino;
            fromAminoMsg(object: _114.RequestInitChainAminoMsg): _114.RequestInitChain;
            fromProtoMsg(message: _114.RequestInitChainProtoMsg): _114.RequestInitChain;
            toProto(message: _114.RequestInitChain): Uint8Array;
            toProtoMsg(message: _114.RequestInitChain): _114.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            is(o: any): o is _114.RequestQuery;
            isSDK(o: any): o is _114.RequestQuerySDKType;
            isAmino(o: any): o is _114.RequestQueryAmino;
            encode(message: _114.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestQuery;
            fromPartial(object: Partial<_114.RequestQuery>): _114.RequestQuery;
            fromAmino(object: _114.RequestQueryAmino): _114.RequestQuery;
            toAmino(message: _114.RequestQuery): _114.RequestQueryAmino;
            fromAminoMsg(object: _114.RequestQueryAminoMsg): _114.RequestQuery;
            fromProtoMsg(message: _114.RequestQueryProtoMsg): _114.RequestQuery;
            toProto(message: _114.RequestQuery): Uint8Array;
            toProtoMsg(message: _114.RequestQuery): _114.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            is(o: any): o is _114.RequestBeginBlock;
            isSDK(o: any): o is _114.RequestBeginBlockSDKType;
            isAmino(o: any): o is _114.RequestBeginBlockAmino;
            encode(message: _114.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestBeginBlock;
            fromPartial(object: Partial<_114.RequestBeginBlock>): _114.RequestBeginBlock;
            fromAmino(object: _114.RequestBeginBlockAmino): _114.RequestBeginBlock;
            toAmino(message: _114.RequestBeginBlock): _114.RequestBeginBlockAmino;
            fromAminoMsg(object: _114.RequestBeginBlockAminoMsg): _114.RequestBeginBlock;
            fromProtoMsg(message: _114.RequestBeginBlockProtoMsg): _114.RequestBeginBlock;
            toProto(message: _114.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _114.RequestBeginBlock): _114.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            is(o: any): o is _114.RequestCheckTx;
            isSDK(o: any): o is _114.RequestCheckTxSDKType;
            isAmino(o: any): o is _114.RequestCheckTxAmino;
            encode(message: _114.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestCheckTx;
            fromPartial(object: Partial<_114.RequestCheckTx>): _114.RequestCheckTx;
            fromAmino(object: _114.RequestCheckTxAmino): _114.RequestCheckTx;
            toAmino(message: _114.RequestCheckTx): _114.RequestCheckTxAmino;
            fromAminoMsg(object: _114.RequestCheckTxAminoMsg): _114.RequestCheckTx;
            fromProtoMsg(message: _114.RequestCheckTxProtoMsg): _114.RequestCheckTx;
            toProto(message: _114.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _114.RequestCheckTx): _114.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            is(o: any): o is _114.RequestDeliverTx;
            isSDK(o: any): o is _114.RequestDeliverTxSDKType;
            isAmino(o: any): o is _114.RequestDeliverTxAmino;
            encode(message: _114.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestDeliverTx;
            fromPartial(object: Partial<_114.RequestDeliverTx>): _114.RequestDeliverTx;
            fromAmino(object: _114.RequestDeliverTxAmino): _114.RequestDeliverTx;
            toAmino(message: _114.RequestDeliverTx): _114.RequestDeliverTxAmino;
            fromAminoMsg(object: _114.RequestDeliverTxAminoMsg): _114.RequestDeliverTx;
            fromProtoMsg(message: _114.RequestDeliverTxProtoMsg): _114.RequestDeliverTx;
            toProto(message: _114.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _114.RequestDeliverTx): _114.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            is(o: any): o is _114.RequestEndBlock;
            isSDK(o: any): o is _114.RequestEndBlockSDKType;
            isAmino(o: any): o is _114.RequestEndBlockAmino;
            encode(message: _114.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestEndBlock;
            fromPartial(object: Partial<_114.RequestEndBlock>): _114.RequestEndBlock;
            fromAmino(object: _114.RequestEndBlockAmino): _114.RequestEndBlock;
            toAmino(message: _114.RequestEndBlock): _114.RequestEndBlockAmino;
            fromAminoMsg(object: _114.RequestEndBlockAminoMsg): _114.RequestEndBlock;
            fromProtoMsg(message: _114.RequestEndBlockProtoMsg): _114.RequestEndBlock;
            toProto(message: _114.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _114.RequestEndBlock): _114.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            is(o: any): o is _114.RequestCommit;
            isSDK(o: any): o is _114.RequestCommitSDKType;
            isAmino(o: any): o is _114.RequestCommitAmino;
            encode(_: _114.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestCommit;
            fromPartial(_: Partial<_114.RequestCommit>): _114.RequestCommit;
            fromAmino(_: _114.RequestCommitAmino): _114.RequestCommit;
            toAmino(_: _114.RequestCommit): _114.RequestCommitAmino;
            fromAminoMsg(object: _114.RequestCommitAminoMsg): _114.RequestCommit;
            fromProtoMsg(message: _114.RequestCommitProtoMsg): _114.RequestCommit;
            toProto(message: _114.RequestCommit): Uint8Array;
            toProtoMsg(message: _114.RequestCommit): _114.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            is(o: any): o is _114.RequestListSnapshots;
            isSDK(o: any): o is _114.RequestListSnapshotsSDKType;
            isAmino(o: any): o is _114.RequestListSnapshotsAmino;
            encode(_: _114.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestListSnapshots;
            fromPartial(_: Partial<_114.RequestListSnapshots>): _114.RequestListSnapshots;
            fromAmino(_: _114.RequestListSnapshotsAmino): _114.RequestListSnapshots;
            toAmino(_: _114.RequestListSnapshots): _114.RequestListSnapshotsAmino;
            fromAminoMsg(object: _114.RequestListSnapshotsAminoMsg): _114.RequestListSnapshots;
            fromProtoMsg(message: _114.RequestListSnapshotsProtoMsg): _114.RequestListSnapshots;
            toProto(message: _114.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _114.RequestListSnapshots): _114.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _114.RequestOfferSnapshot;
            isSDK(o: any): o is _114.RequestOfferSnapshotSDKType;
            isAmino(o: any): o is _114.RequestOfferSnapshotAmino;
            encode(message: _114.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestOfferSnapshot;
            fromPartial(object: Partial<_114.RequestOfferSnapshot>): _114.RequestOfferSnapshot;
            fromAmino(object: _114.RequestOfferSnapshotAmino): _114.RequestOfferSnapshot;
            toAmino(message: _114.RequestOfferSnapshot): _114.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _114.RequestOfferSnapshotAminoMsg): _114.RequestOfferSnapshot;
            fromProtoMsg(message: _114.RequestOfferSnapshotProtoMsg): _114.RequestOfferSnapshot;
            toProto(message: _114.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _114.RequestOfferSnapshot): _114.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _114.RequestLoadSnapshotChunk;
            isSDK(o: any): o is _114.RequestLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _114.RequestLoadSnapshotChunkAmino;
            encode(message: _114.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_114.RequestLoadSnapshotChunk>): _114.RequestLoadSnapshotChunk;
            fromAmino(object: _114.RequestLoadSnapshotChunkAmino): _114.RequestLoadSnapshotChunk;
            toAmino(message: _114.RequestLoadSnapshotChunk): _114.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _114.RequestLoadSnapshotChunkAminoMsg): _114.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _114.RequestLoadSnapshotChunkProtoMsg): _114.RequestLoadSnapshotChunk;
            toProto(message: _114.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _114.RequestLoadSnapshotChunk): _114.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _114.RequestApplySnapshotChunk;
            isSDK(o: any): o is _114.RequestApplySnapshotChunkSDKType;
            isAmino(o: any): o is _114.RequestApplySnapshotChunkAmino;
            encode(message: _114.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_114.RequestApplySnapshotChunk>): _114.RequestApplySnapshotChunk;
            fromAmino(object: _114.RequestApplySnapshotChunkAmino): _114.RequestApplySnapshotChunk;
            toAmino(message: _114.RequestApplySnapshotChunk): _114.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _114.RequestApplySnapshotChunkAminoMsg): _114.RequestApplySnapshotChunk;
            fromProtoMsg(message: _114.RequestApplySnapshotChunkProtoMsg): _114.RequestApplySnapshotChunk;
            toProto(message: _114.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _114.RequestApplySnapshotChunk): _114.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            is(o: any): o is _114.Response;
            isSDK(o: any): o is _114.ResponseSDKType;
            isAmino(o: any): o is _114.ResponseAmino;
            encode(message: _114.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.Response;
            fromPartial(object: Partial<_114.Response>): _114.Response;
            fromAmino(object: _114.ResponseAmino): _114.Response;
            toAmino(message: _114.Response): _114.ResponseAmino;
            fromAminoMsg(object: _114.ResponseAminoMsg): _114.Response;
            fromProtoMsg(message: _114.ResponseProtoMsg): _114.Response;
            toProto(message: _114.Response): Uint8Array;
            toProtoMsg(message: _114.Response): _114.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            is(o: any): o is _114.ResponseException;
            isSDK(o: any): o is _114.ResponseExceptionSDKType;
            isAmino(o: any): o is _114.ResponseExceptionAmino;
            encode(message: _114.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseException;
            fromPartial(object: Partial<_114.ResponseException>): _114.ResponseException;
            fromAmino(object: _114.ResponseExceptionAmino): _114.ResponseException;
            toAmino(message: _114.ResponseException): _114.ResponseExceptionAmino;
            fromAminoMsg(object: _114.ResponseExceptionAminoMsg): _114.ResponseException;
            fromProtoMsg(message: _114.ResponseExceptionProtoMsg): _114.ResponseException;
            toProto(message: _114.ResponseException): Uint8Array;
            toProtoMsg(message: _114.ResponseException): _114.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            is(o: any): o is _114.ResponseEcho;
            isSDK(o: any): o is _114.ResponseEchoSDKType;
            isAmino(o: any): o is _114.ResponseEchoAmino;
            encode(message: _114.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseEcho;
            fromPartial(object: Partial<_114.ResponseEcho>): _114.ResponseEcho;
            fromAmino(object: _114.ResponseEchoAmino): _114.ResponseEcho;
            toAmino(message: _114.ResponseEcho): _114.ResponseEchoAmino;
            fromAminoMsg(object: _114.ResponseEchoAminoMsg): _114.ResponseEcho;
            fromProtoMsg(message: _114.ResponseEchoProtoMsg): _114.ResponseEcho;
            toProto(message: _114.ResponseEcho): Uint8Array;
            toProtoMsg(message: _114.ResponseEcho): _114.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            is(o: any): o is _114.ResponseFlush;
            isSDK(o: any): o is _114.ResponseFlushSDKType;
            isAmino(o: any): o is _114.ResponseFlushAmino;
            encode(_: _114.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseFlush;
            fromPartial(_: Partial<_114.ResponseFlush>): _114.ResponseFlush;
            fromAmino(_: _114.ResponseFlushAmino): _114.ResponseFlush;
            toAmino(_: _114.ResponseFlush): _114.ResponseFlushAmino;
            fromAminoMsg(object: _114.ResponseFlushAminoMsg): _114.ResponseFlush;
            fromProtoMsg(message: _114.ResponseFlushProtoMsg): _114.ResponseFlush;
            toProto(message: _114.ResponseFlush): Uint8Array;
            toProtoMsg(message: _114.ResponseFlush): _114.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            is(o: any): o is _114.ResponseInfo;
            isSDK(o: any): o is _114.ResponseInfoSDKType;
            isAmino(o: any): o is _114.ResponseInfoAmino;
            encode(message: _114.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseInfo;
            fromPartial(object: Partial<_114.ResponseInfo>): _114.ResponseInfo;
            fromAmino(object: _114.ResponseInfoAmino): _114.ResponseInfo;
            toAmino(message: _114.ResponseInfo): _114.ResponseInfoAmino;
            fromAminoMsg(object: _114.ResponseInfoAminoMsg): _114.ResponseInfo;
            fromProtoMsg(message: _114.ResponseInfoProtoMsg): _114.ResponseInfo;
            toProto(message: _114.ResponseInfo): Uint8Array;
            toProtoMsg(message: _114.ResponseInfo): _114.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            is(o: any): o is _114.ResponseSetOption;
            isSDK(o: any): o is _114.ResponseSetOptionSDKType;
            isAmino(o: any): o is _114.ResponseSetOptionAmino;
            encode(message: _114.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseSetOption;
            fromPartial(object: Partial<_114.ResponseSetOption>): _114.ResponseSetOption;
            fromAmino(object: _114.ResponseSetOptionAmino): _114.ResponseSetOption;
            toAmino(message: _114.ResponseSetOption): _114.ResponseSetOptionAmino;
            fromAminoMsg(object: _114.ResponseSetOptionAminoMsg): _114.ResponseSetOption;
            fromProtoMsg(message: _114.ResponseSetOptionProtoMsg): _114.ResponseSetOption;
            toProto(message: _114.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _114.ResponseSetOption): _114.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            is(o: any): o is _114.ResponseInitChain;
            isSDK(o: any): o is _114.ResponseInitChainSDKType;
            isAmino(o: any): o is _114.ResponseInitChainAmino;
            encode(message: _114.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseInitChain;
            fromPartial(object: Partial<_114.ResponseInitChain>): _114.ResponseInitChain;
            fromAmino(object: _114.ResponseInitChainAmino): _114.ResponseInitChain;
            toAmino(message: _114.ResponseInitChain): _114.ResponseInitChainAmino;
            fromAminoMsg(object: _114.ResponseInitChainAminoMsg): _114.ResponseInitChain;
            fromProtoMsg(message: _114.ResponseInitChainProtoMsg): _114.ResponseInitChain;
            toProto(message: _114.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _114.ResponseInitChain): _114.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            is(o: any): o is _114.ResponseQuery;
            isSDK(o: any): o is _114.ResponseQuerySDKType;
            isAmino(o: any): o is _114.ResponseQueryAmino;
            encode(message: _114.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseQuery;
            fromPartial(object: Partial<_114.ResponseQuery>): _114.ResponseQuery;
            fromAmino(object: _114.ResponseQueryAmino): _114.ResponseQuery;
            toAmino(message: _114.ResponseQuery): _114.ResponseQueryAmino;
            fromAminoMsg(object: _114.ResponseQueryAminoMsg): _114.ResponseQuery;
            fromProtoMsg(message: _114.ResponseQueryProtoMsg): _114.ResponseQuery;
            toProto(message: _114.ResponseQuery): Uint8Array;
            toProtoMsg(message: _114.ResponseQuery): _114.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            is(o: any): o is _114.ResponseBeginBlock;
            isSDK(o: any): o is _114.ResponseBeginBlockSDKType;
            isAmino(o: any): o is _114.ResponseBeginBlockAmino;
            encode(message: _114.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseBeginBlock;
            fromPartial(object: Partial<_114.ResponseBeginBlock>): _114.ResponseBeginBlock;
            fromAmino(object: _114.ResponseBeginBlockAmino): _114.ResponseBeginBlock;
            toAmino(message: _114.ResponseBeginBlock): _114.ResponseBeginBlockAmino;
            fromAminoMsg(object: _114.ResponseBeginBlockAminoMsg): _114.ResponseBeginBlock;
            fromProtoMsg(message: _114.ResponseBeginBlockProtoMsg): _114.ResponseBeginBlock;
            toProto(message: _114.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _114.ResponseBeginBlock): _114.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            is(o: any): o is _114.ResponseCheckTx;
            isSDK(o: any): o is _114.ResponseCheckTxSDKType;
            isAmino(o: any): o is _114.ResponseCheckTxAmino;
            encode(message: _114.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseCheckTx;
            fromPartial(object: Partial<_114.ResponseCheckTx>): _114.ResponseCheckTx;
            fromAmino(object: _114.ResponseCheckTxAmino): _114.ResponseCheckTx;
            toAmino(message: _114.ResponseCheckTx): _114.ResponseCheckTxAmino;
            fromAminoMsg(object: _114.ResponseCheckTxAminoMsg): _114.ResponseCheckTx;
            fromProtoMsg(message: _114.ResponseCheckTxProtoMsg): _114.ResponseCheckTx;
            toProto(message: _114.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _114.ResponseCheckTx): _114.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            is(o: any): o is _114.ResponseDeliverTx;
            isSDK(o: any): o is _114.ResponseDeliverTxSDKType;
            isAmino(o: any): o is _114.ResponseDeliverTxAmino;
            encode(message: _114.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseDeliverTx;
            fromPartial(object: Partial<_114.ResponseDeliverTx>): _114.ResponseDeliverTx;
            fromAmino(object: _114.ResponseDeliverTxAmino): _114.ResponseDeliverTx;
            toAmino(message: _114.ResponseDeliverTx): _114.ResponseDeliverTxAmino;
            fromAminoMsg(object: _114.ResponseDeliverTxAminoMsg): _114.ResponseDeliverTx;
            fromProtoMsg(message: _114.ResponseDeliverTxProtoMsg): _114.ResponseDeliverTx;
            toProto(message: _114.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _114.ResponseDeliverTx): _114.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            is(o: any): o is _114.ResponseEndBlock;
            isSDK(o: any): o is _114.ResponseEndBlockSDKType;
            isAmino(o: any): o is _114.ResponseEndBlockAmino;
            encode(message: _114.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseEndBlock;
            fromPartial(object: Partial<_114.ResponseEndBlock>): _114.ResponseEndBlock;
            fromAmino(object: _114.ResponseEndBlockAmino): _114.ResponseEndBlock;
            toAmino(message: _114.ResponseEndBlock): _114.ResponseEndBlockAmino;
            fromAminoMsg(object: _114.ResponseEndBlockAminoMsg): _114.ResponseEndBlock;
            fromProtoMsg(message: _114.ResponseEndBlockProtoMsg): _114.ResponseEndBlock;
            toProto(message: _114.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _114.ResponseEndBlock): _114.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            is(o: any): o is _114.ResponseCommit;
            isSDK(o: any): o is _114.ResponseCommitSDKType;
            isAmino(o: any): o is _114.ResponseCommitAmino;
            encode(message: _114.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseCommit;
            fromPartial(object: Partial<_114.ResponseCommit>): _114.ResponseCommit;
            fromAmino(object: _114.ResponseCommitAmino): _114.ResponseCommit;
            toAmino(message: _114.ResponseCommit): _114.ResponseCommitAmino;
            fromAminoMsg(object: _114.ResponseCommitAminoMsg): _114.ResponseCommit;
            fromProtoMsg(message: _114.ResponseCommitProtoMsg): _114.ResponseCommit;
            toProto(message: _114.ResponseCommit): Uint8Array;
            toProtoMsg(message: _114.ResponseCommit): _114.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            is(o: any): o is _114.ResponseListSnapshots;
            isSDK(o: any): o is _114.ResponseListSnapshotsSDKType;
            isAmino(o: any): o is _114.ResponseListSnapshotsAmino;
            encode(message: _114.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseListSnapshots;
            fromPartial(object: Partial<_114.ResponseListSnapshots>): _114.ResponseListSnapshots;
            fromAmino(object: _114.ResponseListSnapshotsAmino): _114.ResponseListSnapshots;
            toAmino(message: _114.ResponseListSnapshots): _114.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _114.ResponseListSnapshotsAminoMsg): _114.ResponseListSnapshots;
            fromProtoMsg(message: _114.ResponseListSnapshotsProtoMsg): _114.ResponseListSnapshots;
            toProto(message: _114.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _114.ResponseListSnapshots): _114.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _114.ResponseOfferSnapshot;
            isSDK(o: any): o is _114.ResponseOfferSnapshotSDKType;
            isAmino(o: any): o is _114.ResponseOfferSnapshotAmino;
            encode(message: _114.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseOfferSnapshot;
            fromPartial(object: Partial<_114.ResponseOfferSnapshot>): _114.ResponseOfferSnapshot;
            fromAmino(object: _114.ResponseOfferSnapshotAmino): _114.ResponseOfferSnapshot;
            toAmino(message: _114.ResponseOfferSnapshot): _114.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _114.ResponseOfferSnapshotAminoMsg): _114.ResponseOfferSnapshot;
            fromProtoMsg(message: _114.ResponseOfferSnapshotProtoMsg): _114.ResponseOfferSnapshot;
            toProto(message: _114.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _114.ResponseOfferSnapshot): _114.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _114.ResponseLoadSnapshotChunk;
            isSDK(o: any): o is _114.ResponseLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _114.ResponseLoadSnapshotChunkAmino;
            encode(message: _114.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_114.ResponseLoadSnapshotChunk>): _114.ResponseLoadSnapshotChunk;
            fromAmino(object: _114.ResponseLoadSnapshotChunkAmino): _114.ResponseLoadSnapshotChunk;
            toAmino(message: _114.ResponseLoadSnapshotChunk): _114.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _114.ResponseLoadSnapshotChunkAminoMsg): _114.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _114.ResponseLoadSnapshotChunkProtoMsg): _114.ResponseLoadSnapshotChunk;
            toProto(message: _114.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _114.ResponseLoadSnapshotChunk): _114.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _114.ResponseApplySnapshotChunk;
            isSDK(o: any): o is _114.ResponseApplySnapshotChunkSDKType;
            isAmino(o: any): o is _114.ResponseApplySnapshotChunkAmino;
            encode(message: _114.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_114.ResponseApplySnapshotChunk>): _114.ResponseApplySnapshotChunk;
            fromAmino(object: _114.ResponseApplySnapshotChunkAmino): _114.ResponseApplySnapshotChunk;
            toAmino(message: _114.ResponseApplySnapshotChunk): _114.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _114.ResponseApplySnapshotChunkAminoMsg): _114.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _114.ResponseApplySnapshotChunkProtoMsg): _114.ResponseApplySnapshotChunk;
            toProto(message: _114.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _114.ResponseApplySnapshotChunk): _114.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _114.ConsensusParams;
            isSDK(o: any): o is _114.ConsensusParamsSDKType;
            isAmino(o: any): o is _114.ConsensusParamsAmino;
            encode(message: _114.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ConsensusParams;
            fromPartial(object: Partial<_114.ConsensusParams>): _114.ConsensusParams;
            fromAmino(object: _114.ConsensusParamsAmino): _114.ConsensusParams;
            toAmino(message: _114.ConsensusParams): _114.ConsensusParamsAmino;
            fromAminoMsg(object: _114.ConsensusParamsAminoMsg): _114.ConsensusParams;
            fromProtoMsg(message: _114.ConsensusParamsProtoMsg): _114.ConsensusParams;
            toProto(message: _114.ConsensusParams): Uint8Array;
            toProtoMsg(message: _114.ConsensusParams): _114.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _114.BlockParams;
            isSDK(o: any): o is _114.BlockParamsSDKType;
            isAmino(o: any): o is _114.BlockParamsAmino;
            encode(message: _114.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.BlockParams;
            fromPartial(object: Partial<_114.BlockParams>): _114.BlockParams;
            fromAmino(object: _114.BlockParamsAmino): _114.BlockParams;
            toAmino(message: _114.BlockParams): _114.BlockParamsAmino;
            fromAminoMsg(object: _114.BlockParamsAminoMsg): _114.BlockParams;
            fromProtoMsg(message: _114.BlockParamsProtoMsg): _114.BlockParams;
            toProto(message: _114.BlockParams): Uint8Array;
            toProtoMsg(message: _114.BlockParams): _114.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            is(o: any): o is _114.LastCommitInfo;
            isSDK(o: any): o is _114.LastCommitInfoSDKType;
            isAmino(o: any): o is _114.LastCommitInfoAmino;
            encode(message: _114.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.LastCommitInfo;
            fromPartial(object: Partial<_114.LastCommitInfo>): _114.LastCommitInfo;
            fromAmino(object: _114.LastCommitInfoAmino): _114.LastCommitInfo;
            toAmino(message: _114.LastCommitInfo): _114.LastCommitInfoAmino;
            fromAminoMsg(object: _114.LastCommitInfoAminoMsg): _114.LastCommitInfo;
            fromProtoMsg(message: _114.LastCommitInfoProtoMsg): _114.LastCommitInfo;
            toProto(message: _114.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _114.LastCommitInfo): _114.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            is(o: any): o is _114.Event;
            isSDK(o: any): o is _114.EventSDKType;
            isAmino(o: any): o is _114.EventAmino;
            encode(message: _114.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.Event;
            fromPartial(object: Partial<_114.Event>): _114.Event;
            fromAmino(object: _114.EventAmino): _114.Event;
            toAmino(message: _114.Event): _114.EventAmino;
            fromAminoMsg(object: _114.EventAminoMsg): _114.Event;
            fromProtoMsg(message: _114.EventProtoMsg): _114.Event;
            toProto(message: _114.Event): Uint8Array;
            toProtoMsg(message: _114.Event): _114.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            is(o: any): o is _114.EventAttribute;
            isSDK(o: any): o is _114.EventAttributeSDKType;
            isAmino(o: any): o is _114.EventAttributeAmino;
            encode(message: _114.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.EventAttribute;
            fromPartial(object: Partial<_114.EventAttribute>): _114.EventAttribute;
            fromAmino(object: _114.EventAttributeAmino): _114.EventAttribute;
            toAmino(message: _114.EventAttribute): _114.EventAttributeAmino;
            fromAminoMsg(object: _114.EventAttributeAminoMsg): _114.EventAttribute;
            fromProtoMsg(message: _114.EventAttributeProtoMsg): _114.EventAttribute;
            toProto(message: _114.EventAttribute): Uint8Array;
            toProtoMsg(message: _114.EventAttribute): _114.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            is(o: any): o is _114.TxResult;
            isSDK(o: any): o is _114.TxResultSDKType;
            isAmino(o: any): o is _114.TxResultAmino;
            encode(message: _114.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.TxResult;
            fromPartial(object: Partial<_114.TxResult>): _114.TxResult;
            fromAmino(object: _114.TxResultAmino): _114.TxResult;
            toAmino(message: _114.TxResult): _114.TxResultAmino;
            fromAminoMsg(object: _114.TxResultAminoMsg): _114.TxResult;
            fromProtoMsg(message: _114.TxResultProtoMsg): _114.TxResult;
            toProto(message: _114.TxResult): Uint8Array;
            toProtoMsg(message: _114.TxResult): _114.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _114.Validator;
            isSDK(o: any): o is _114.ValidatorSDKType;
            isAmino(o: any): o is _114.ValidatorAmino;
            encode(message: _114.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.Validator;
            fromPartial(object: Partial<_114.Validator>): _114.Validator;
            fromAmino(object: _114.ValidatorAmino): _114.Validator;
            toAmino(message: _114.Validator): _114.ValidatorAmino;
            fromAminoMsg(object: _114.ValidatorAminoMsg): _114.Validator;
            fromProtoMsg(message: _114.ValidatorProtoMsg): _114.Validator;
            toProto(message: _114.Validator): Uint8Array;
            toProtoMsg(message: _114.Validator): _114.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            is(o: any): o is _114.ValidatorUpdate;
            isSDK(o: any): o is _114.ValidatorUpdateSDKType;
            isAmino(o: any): o is _114.ValidatorUpdateAmino;
            encode(message: _114.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.ValidatorUpdate;
            fromPartial(object: Partial<_114.ValidatorUpdate>): _114.ValidatorUpdate;
            fromAmino(object: _114.ValidatorUpdateAmino): _114.ValidatorUpdate;
            toAmino(message: _114.ValidatorUpdate): _114.ValidatorUpdateAmino;
            fromAminoMsg(object: _114.ValidatorUpdateAminoMsg): _114.ValidatorUpdate;
            fromProtoMsg(message: _114.ValidatorUpdateProtoMsg): _114.ValidatorUpdate;
            toProto(message: _114.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _114.ValidatorUpdate): _114.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            is(o: any): o is _114.VoteInfo;
            isSDK(o: any): o is _114.VoteInfoSDKType;
            isAmino(o: any): o is _114.VoteInfoAmino;
            encode(message: _114.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.VoteInfo;
            fromPartial(object: Partial<_114.VoteInfo>): _114.VoteInfo;
            fromAmino(object: _114.VoteInfoAmino): _114.VoteInfo;
            toAmino(message: _114.VoteInfo): _114.VoteInfoAmino;
            fromAminoMsg(object: _114.VoteInfoAminoMsg): _114.VoteInfo;
            fromProtoMsg(message: _114.VoteInfoProtoMsg): _114.VoteInfo;
            toProto(message: _114.VoteInfo): Uint8Array;
            toProtoMsg(message: _114.VoteInfo): _114.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _114.Evidence;
            isSDK(o: any): o is _114.EvidenceSDKType;
            isAmino(o: any): o is _114.EvidenceAmino;
            encode(message: _114.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.Evidence;
            fromPartial(object: Partial<_114.Evidence>): _114.Evidence;
            fromAmino(object: _114.EvidenceAmino): _114.Evidence;
            toAmino(message: _114.Evidence): _114.EvidenceAmino;
            fromAminoMsg(object: _114.EvidenceAminoMsg): _114.Evidence;
            fromProtoMsg(message: _114.EvidenceProtoMsg): _114.Evidence;
            toProto(message: _114.Evidence): Uint8Array;
            toProtoMsg(message: _114.Evidence): _114.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            is(o: any): o is _114.Snapshot;
            isSDK(o: any): o is _114.SnapshotSDKType;
            isAmino(o: any): o is _114.SnapshotAmino;
            encode(message: _114.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _114.Snapshot;
            fromPartial(object: Partial<_114.Snapshot>): _114.Snapshot;
            fromAmino(object: _114.SnapshotAmino): _114.Snapshot;
            toAmino(message: _114.Snapshot): _114.SnapshotAmino;
            fromAminoMsg(object: _114.SnapshotAminoMsg): _114.Snapshot;
            fromProtoMsg(message: _114.SnapshotProtoMsg): _114.Snapshot;
            toProto(message: _114.Snapshot): Uint8Array;
            toProtoMsg(message: _114.Snapshot): _114.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            is(o: any): o is _116.Proof;
            isSDK(o: any): o is _116.ProofSDKType;
            isAmino(o: any): o is _116.ProofAmino;
            encode(message: _116.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _116.Proof;
            fromPartial(object: Partial<_116.Proof>): _116.Proof;
            fromAmino(object: _116.ProofAmino): _116.Proof;
            toAmino(message: _116.Proof): _116.ProofAmino;
            fromAminoMsg(object: _116.ProofAminoMsg): _116.Proof;
            fromProtoMsg(message: _116.ProofProtoMsg): _116.Proof;
            toProto(message: _116.Proof): Uint8Array;
            toProtoMsg(message: _116.Proof): _116.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            is(o: any): o is _116.ValueOp;
            isSDK(o: any): o is _116.ValueOpSDKType;
            isAmino(o: any): o is _116.ValueOpAmino;
            encode(message: _116.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _116.ValueOp;
            fromPartial(object: Partial<_116.ValueOp>): _116.ValueOp;
            fromAmino(object: _116.ValueOpAmino): _116.ValueOp;
            toAmino(message: _116.ValueOp): _116.ValueOpAmino;
            fromAminoMsg(object: _116.ValueOpAminoMsg): _116.ValueOp;
            fromProtoMsg(message: _116.ValueOpProtoMsg): _116.ValueOp;
            toProto(message: _116.ValueOp): Uint8Array;
            toProtoMsg(message: _116.ValueOp): _116.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            is(o: any): o is _116.DominoOp;
            isSDK(o: any): o is _116.DominoOpSDKType;
            isAmino(o: any): o is _116.DominoOpAmino;
            encode(message: _116.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _116.DominoOp;
            fromPartial(object: Partial<_116.DominoOp>): _116.DominoOp;
            fromAmino(object: _116.DominoOpAmino): _116.DominoOp;
            toAmino(message: _116.DominoOp): _116.DominoOpAmino;
            fromAminoMsg(object: _116.DominoOpAminoMsg): _116.DominoOp;
            fromProtoMsg(message: _116.DominoOpProtoMsg): _116.DominoOp;
            toProto(message: _116.DominoOp): Uint8Array;
            toProtoMsg(message: _116.DominoOp): _116.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            is(o: any): o is _116.ProofOp;
            isSDK(o: any): o is _116.ProofOpSDKType;
            isAmino(o: any): o is _116.ProofOpAmino;
            encode(message: _116.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _116.ProofOp;
            fromPartial(object: Partial<_116.ProofOp>): _116.ProofOp;
            fromAmino(object: _116.ProofOpAmino): _116.ProofOp;
            toAmino(message: _116.ProofOp): _116.ProofOpAmino;
            fromAminoMsg(object: _116.ProofOpAminoMsg): _116.ProofOp;
            fromProtoMsg(message: _116.ProofOpProtoMsg): _116.ProofOp;
            toProto(message: _116.ProofOp): Uint8Array;
            toProtoMsg(message: _116.ProofOp): _116.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            is(o: any): o is _116.ProofOps;
            isSDK(o: any): o is _116.ProofOpsSDKType;
            isAmino(o: any): o is _116.ProofOpsAmino;
            encode(message: _116.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _116.ProofOps;
            fromPartial(object: Partial<_116.ProofOps>): _116.ProofOps;
            fromAmino(object: _116.ProofOpsAmino): _116.ProofOps;
            toAmino(message: _116.ProofOps): _116.ProofOpsAmino;
            fromAminoMsg(object: _116.ProofOpsAminoMsg): _116.ProofOps;
            fromProtoMsg(message: _116.ProofOpsProtoMsg): _116.ProofOps;
            toProto(message: _116.ProofOps): Uint8Array;
            toProtoMsg(message: _116.ProofOps): _116.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            is(o: any): o is _115.PublicKey;
            isSDK(o: any): o is _115.PublicKeySDKType;
            isAmino(o: any): o is _115.PublicKeyAmino;
            encode(message: _115.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _115.PublicKey;
            fromPartial(object: Partial<_115.PublicKey>): _115.PublicKey;
            fromAmino(object: _115.PublicKeyAmino): _115.PublicKey;
            toAmino(message: _115.PublicKey): _115.PublicKeyAmino;
            fromAminoMsg(object: _115.PublicKeyAminoMsg): _115.PublicKey;
            fromProtoMsg(message: _115.PublicKeyProtoMsg): _115.PublicKey;
            toProto(message: _115.PublicKey): Uint8Array;
            toProtoMsg(message: _115.PublicKey): _115.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                is(o: any): o is _117.BitArray;
                isSDK(o: any): o is _117.BitArraySDKType;
                isAmino(o: any): o is _117.BitArrayAmino;
                encode(message: _117.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: import("..").BinaryReader | Uint8Array, length?: number): _117.BitArray;
                fromPartial(object: Partial<_117.BitArray>): _117.BitArray;
                fromAmino(object: _117.BitArrayAmino): _117.BitArray;
                toAmino(message: _117.BitArray): _117.BitArrayAmino;
                fromAminoMsg(object: _117.BitArrayAminoMsg): _117.BitArray;
                fromProtoMsg(message: _117.BitArrayProtoMsg): _117.BitArray;
                toProto(message: _117.BitArray): Uint8Array;
                toProtoMsg(message: _117.BitArray): _117.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        ProtocolVersion: {
            typeUrl: string;
            is(o: any): o is _118.ProtocolVersion;
            isSDK(o: any): o is _118.ProtocolVersionSDKType;
            isAmino(o: any): o is _118.ProtocolVersionAmino;
            encode(message: _118.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _118.ProtocolVersion;
            fromPartial(object: Partial<_118.ProtocolVersion>): _118.ProtocolVersion;
            fromAmino(object: _118.ProtocolVersionAmino): _118.ProtocolVersion;
            toAmino(message: _118.ProtocolVersion): _118.ProtocolVersionAmino;
            fromAminoMsg(object: _118.ProtocolVersionAminoMsg): _118.ProtocolVersion;
            fromProtoMsg(message: _118.ProtocolVersionProtoMsg): _118.ProtocolVersion;
            toProto(message: _118.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _118.ProtocolVersion): _118.ProtocolVersionProtoMsg;
        };
        NodeInfo: {
            typeUrl: string;
            is(o: any): o is _118.NodeInfo;
            isSDK(o: any): o is _118.NodeInfoSDKType;
            isAmino(o: any): o is _118.NodeInfoAmino;
            encode(message: _118.NodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _118.NodeInfo;
            fromPartial(object: Partial<_118.NodeInfo>): _118.NodeInfo;
            fromAmino(object: _118.NodeInfoAmino): _118.NodeInfo;
            toAmino(message: _118.NodeInfo): _118.NodeInfoAmino;
            fromAminoMsg(object: _118.NodeInfoAminoMsg): _118.NodeInfo;
            fromProtoMsg(message: _118.NodeInfoProtoMsg): _118.NodeInfo;
            toProto(message: _118.NodeInfo): Uint8Array;
            toProtoMsg(message: _118.NodeInfo): _118.NodeInfoProtoMsg;
        };
        NodeInfoOther: {
            typeUrl: string;
            is(o: any): o is _118.NodeInfoOther;
            isSDK(o: any): o is _118.NodeInfoOtherSDKType;
            isAmino(o: any): o is _118.NodeInfoOtherAmino;
            encode(message: _118.NodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _118.NodeInfoOther;
            fromPartial(object: Partial<_118.NodeInfoOther>): _118.NodeInfoOther;
            fromAmino(object: _118.NodeInfoOtherAmino): _118.NodeInfoOther;
            toAmino(message: _118.NodeInfoOther): _118.NodeInfoOtherAmino;
            fromAminoMsg(object: _118.NodeInfoOtherAminoMsg): _118.NodeInfoOther;
            fromProtoMsg(message: _118.NodeInfoOtherProtoMsg): _118.NodeInfoOther;
            toProto(message: _118.NodeInfoOther): Uint8Array;
            toProtoMsg(message: _118.NodeInfoOther): _118.NodeInfoOtherProtoMsg;
        };
        PeerInfo: {
            typeUrl: string;
            is(o: any): o is _118.PeerInfo;
            isSDK(o: any): o is _118.PeerInfoSDKType;
            isAmino(o: any): o is _118.PeerInfoAmino;
            encode(message: _118.PeerInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _118.PeerInfo;
            fromPartial(object: Partial<_118.PeerInfo>): _118.PeerInfo;
            fromAmino(object: _118.PeerInfoAmino): _118.PeerInfo;
            toAmino(message: _118.PeerInfo): _118.PeerInfoAmino;
            fromAminoMsg(object: _118.PeerInfoAminoMsg): _118.PeerInfo;
            fromProtoMsg(message: _118.PeerInfoProtoMsg): _118.PeerInfo;
            toProto(message: _118.PeerInfo): Uint8Array;
            toProtoMsg(message: _118.PeerInfo): _118.PeerInfoProtoMsg;
        };
        PeerAddressInfo: {
            typeUrl: string;
            is(o: any): o is _118.PeerAddressInfo;
            isSDK(o: any): o is _118.PeerAddressInfoSDKType;
            isAmino(o: any): o is _118.PeerAddressInfoAmino;
            encode(message: _118.PeerAddressInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _118.PeerAddressInfo;
            fromPartial(object: Partial<_118.PeerAddressInfo>): _118.PeerAddressInfo;
            fromAmino(object: _118.PeerAddressInfoAmino): _118.PeerAddressInfo;
            toAmino(message: _118.PeerAddressInfo): _118.PeerAddressInfoAmino;
            fromAminoMsg(object: _118.PeerAddressInfoAminoMsg): _118.PeerAddressInfo;
            fromProtoMsg(message: _118.PeerAddressInfoProtoMsg): _118.PeerAddressInfo;
            toProto(message: _118.PeerAddressInfo): Uint8Array;
            toProtoMsg(message: _118.PeerAddressInfo): _118.PeerAddressInfoProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            is(o: any): o is _123.ValidatorSet;
            isSDK(o: any): o is _123.ValidatorSetSDKType;
            isAmino(o: any): o is _123.ValidatorSetAmino;
            encode(message: _123.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _123.ValidatorSet;
            fromPartial(object: Partial<_123.ValidatorSet>): _123.ValidatorSet;
            fromAmino(object: _123.ValidatorSetAmino): _123.ValidatorSet;
            toAmino(message: _123.ValidatorSet): _123.ValidatorSetAmino;
            fromAminoMsg(object: _123.ValidatorSetAminoMsg): _123.ValidatorSet;
            fromProtoMsg(message: _123.ValidatorSetProtoMsg): _123.ValidatorSet;
            toProto(message: _123.ValidatorSet): Uint8Array;
            toProtoMsg(message: _123.ValidatorSet): _123.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _123.Validator;
            isSDK(o: any): o is _123.ValidatorSDKType;
            isAmino(o: any): o is _123.ValidatorAmino;
            encode(message: _123.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _123.Validator;
            fromPartial(object: Partial<_123.Validator>): _123.Validator;
            fromAmino(object: _123.ValidatorAmino): _123.Validator;
            toAmino(message: _123.Validator): _123.ValidatorAmino;
            fromAminoMsg(object: _123.ValidatorAminoMsg): _123.Validator;
            fromProtoMsg(message: _123.ValidatorProtoMsg): _123.Validator;
            toProto(message: _123.Validator): Uint8Array;
            toProtoMsg(message: _123.Validator): _123.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            is(o: any): o is _123.SimpleValidator;
            isSDK(o: any): o is _123.SimpleValidatorSDKType;
            isAmino(o: any): o is _123.SimpleValidatorAmino;
            encode(message: _123.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _123.SimpleValidator;
            fromPartial(object: Partial<_123.SimpleValidator>): _123.SimpleValidator;
            fromAmino(object: _123.SimpleValidatorAmino): _123.SimpleValidator;
            toAmino(message: _123.SimpleValidator): _123.SimpleValidatorAmino;
            fromAminoMsg(object: _123.SimpleValidatorAminoMsg): _123.SimpleValidator;
            fromProtoMsg(message: _123.SimpleValidatorProtoMsg): _123.SimpleValidator;
            toProto(message: _123.SimpleValidator): Uint8Array;
            toProtoMsg(message: _123.SimpleValidator): _123.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _122.BlockIDFlag;
        blockIDFlagToJSON(object: _122.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _122.SignedMsgType;
        signedMsgTypeToJSON(object: _122.SignedMsgType): string;
        BlockIDFlag: typeof _122.BlockIDFlag;
        BlockIDFlagSDKType: typeof _122.BlockIDFlag;
        BlockIDFlagAmino: typeof _122.BlockIDFlag;
        SignedMsgType: typeof _122.SignedMsgType;
        SignedMsgTypeSDKType: typeof _122.SignedMsgType;
        SignedMsgTypeAmino: typeof _122.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            is(o: any): o is _122.PartSetHeader;
            isSDK(o: any): o is _122.PartSetHeaderSDKType;
            isAmino(o: any): o is _122.PartSetHeaderAmino;
            encode(message: _122.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.PartSetHeader;
            fromPartial(object: Partial<_122.PartSetHeader>): _122.PartSetHeader;
            fromAmino(object: _122.PartSetHeaderAmino): _122.PartSetHeader;
            toAmino(message: _122.PartSetHeader): _122.PartSetHeaderAmino;
            fromAminoMsg(object: _122.PartSetHeaderAminoMsg): _122.PartSetHeader;
            fromProtoMsg(message: _122.PartSetHeaderProtoMsg): _122.PartSetHeader;
            toProto(message: _122.PartSetHeader): Uint8Array;
            toProtoMsg(message: _122.PartSetHeader): _122.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            is(o: any): o is _122.Part;
            isSDK(o: any): o is _122.PartSDKType;
            isAmino(o: any): o is _122.PartAmino;
            encode(message: _122.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Part;
            fromPartial(object: Partial<_122.Part>): _122.Part;
            fromAmino(object: _122.PartAmino): _122.Part;
            toAmino(message: _122.Part): _122.PartAmino;
            fromAminoMsg(object: _122.PartAminoMsg): _122.Part;
            fromProtoMsg(message: _122.PartProtoMsg): _122.Part;
            toProto(message: _122.Part): Uint8Array;
            toProtoMsg(message: _122.Part): _122.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            is(o: any): o is _122.BlockID;
            isSDK(o: any): o is _122.BlockIDSDKType;
            isAmino(o: any): o is _122.BlockIDAmino;
            encode(message: _122.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.BlockID;
            fromPartial(object: Partial<_122.BlockID>): _122.BlockID;
            fromAmino(object: _122.BlockIDAmino): _122.BlockID;
            toAmino(message: _122.BlockID): _122.BlockIDAmino;
            fromAminoMsg(object: _122.BlockIDAminoMsg): _122.BlockID;
            fromProtoMsg(message: _122.BlockIDProtoMsg): _122.BlockID;
            toProto(message: _122.BlockID): Uint8Array;
            toProtoMsg(message: _122.BlockID): _122.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            is(o: any): o is _122.Header;
            isSDK(o: any): o is _122.HeaderSDKType;
            isAmino(o: any): o is _122.HeaderAmino;
            encode(message: _122.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Header;
            fromPartial(object: Partial<_122.Header>): _122.Header;
            fromAmino(object: _122.HeaderAmino): _122.Header;
            toAmino(message: _122.Header): _122.HeaderAmino;
            fromAminoMsg(object: _122.HeaderAminoMsg): _122.Header;
            fromProtoMsg(message: _122.HeaderProtoMsg): _122.Header;
            toProto(message: _122.Header): Uint8Array;
            toProtoMsg(message: _122.Header): _122.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            is(o: any): o is _122.Data;
            isSDK(o: any): o is _122.DataSDKType;
            isAmino(o: any): o is _122.DataAmino;
            encode(message: _122.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Data;
            fromPartial(object: Partial<_122.Data>): _122.Data;
            fromAmino(object: _122.DataAmino): _122.Data;
            toAmino(message: _122.Data): _122.DataAmino;
            fromAminoMsg(object: _122.DataAminoMsg): _122.Data;
            fromProtoMsg(message: _122.DataProtoMsg): _122.Data;
            toProto(message: _122.Data): Uint8Array;
            toProtoMsg(message: _122.Data): _122.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            is(o: any): o is _122.Vote;
            isSDK(o: any): o is _122.VoteSDKType;
            isAmino(o: any): o is _122.VoteAmino;
            encode(message: _122.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Vote;
            fromPartial(object: Partial<_122.Vote>): _122.Vote;
            fromAmino(object: _122.VoteAmino): _122.Vote;
            toAmino(message: _122.Vote): _122.VoteAmino;
            fromAminoMsg(object: _122.VoteAminoMsg): _122.Vote;
            fromProtoMsg(message: _122.VoteProtoMsg): _122.Vote;
            toProto(message: _122.Vote): Uint8Array;
            toProtoMsg(message: _122.Vote): _122.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            is(o: any): o is _122.Commit;
            isSDK(o: any): o is _122.CommitSDKType;
            isAmino(o: any): o is _122.CommitAmino;
            encode(message: _122.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Commit;
            fromPartial(object: Partial<_122.Commit>): _122.Commit;
            fromAmino(object: _122.CommitAmino): _122.Commit;
            toAmino(message: _122.Commit): _122.CommitAmino;
            fromAminoMsg(object: _122.CommitAminoMsg): _122.Commit;
            fromProtoMsg(message: _122.CommitProtoMsg): _122.Commit;
            toProto(message: _122.Commit): Uint8Array;
            toProtoMsg(message: _122.Commit): _122.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            is(o: any): o is _122.CommitSig;
            isSDK(o: any): o is _122.CommitSigSDKType;
            isAmino(o: any): o is _122.CommitSigAmino;
            encode(message: _122.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.CommitSig;
            fromPartial(object: Partial<_122.CommitSig>): _122.CommitSig;
            fromAmino(object: _122.CommitSigAmino): _122.CommitSig;
            toAmino(message: _122.CommitSig): _122.CommitSigAmino;
            fromAminoMsg(object: _122.CommitSigAminoMsg): _122.CommitSig;
            fromProtoMsg(message: _122.CommitSigProtoMsg): _122.CommitSig;
            toProto(message: _122.CommitSig): Uint8Array;
            toProtoMsg(message: _122.CommitSig): _122.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            is(o: any): o is _122.Proposal;
            isSDK(o: any): o is _122.ProposalSDKType;
            isAmino(o: any): o is _122.ProposalAmino;
            encode(message: _122.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Proposal;
            fromPartial(object: Partial<_122.Proposal>): _122.Proposal;
            fromAmino(object: _122.ProposalAmino): _122.Proposal;
            toAmino(message: _122.Proposal): _122.ProposalAmino;
            fromAminoMsg(object: _122.ProposalAminoMsg): _122.Proposal;
            fromProtoMsg(message: _122.ProposalProtoMsg): _122.Proposal;
            toProto(message: _122.Proposal): Uint8Array;
            toProtoMsg(message: _122.Proposal): _122.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            is(o: any): o is _122.SignedHeader;
            isSDK(o: any): o is _122.SignedHeaderSDKType;
            isAmino(o: any): o is _122.SignedHeaderAmino;
            encode(message: _122.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.SignedHeader;
            fromPartial(object: Partial<_122.SignedHeader>): _122.SignedHeader;
            fromAmino(object: _122.SignedHeaderAmino): _122.SignedHeader;
            toAmino(message: _122.SignedHeader): _122.SignedHeaderAmino;
            fromAminoMsg(object: _122.SignedHeaderAminoMsg): _122.SignedHeader;
            fromProtoMsg(message: _122.SignedHeaderProtoMsg): _122.SignedHeader;
            toProto(message: _122.SignedHeader): Uint8Array;
            toProtoMsg(message: _122.SignedHeader): _122.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            is(o: any): o is _122.LightBlock;
            isSDK(o: any): o is _122.LightBlockSDKType;
            isAmino(o: any): o is _122.LightBlockAmino;
            encode(message: _122.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.LightBlock;
            fromPartial(object: Partial<_122.LightBlock>): _122.LightBlock;
            fromAmino(object: _122.LightBlockAmino): _122.LightBlock;
            toAmino(message: _122.LightBlock): _122.LightBlockAmino;
            fromAminoMsg(object: _122.LightBlockAminoMsg): _122.LightBlock;
            fromProtoMsg(message: _122.LightBlockProtoMsg): _122.LightBlock;
            toProto(message: _122.LightBlock): Uint8Array;
            toProtoMsg(message: _122.LightBlock): _122.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            is(o: any): o is _122.BlockMeta;
            isSDK(o: any): o is _122.BlockMetaSDKType;
            isAmino(o: any): o is _122.BlockMetaAmino;
            encode(message: _122.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.BlockMeta;
            fromPartial(object: Partial<_122.BlockMeta>): _122.BlockMeta;
            fromAmino(object: _122.BlockMetaAmino): _122.BlockMeta;
            toAmino(message: _122.BlockMeta): _122.BlockMetaAmino;
            fromAminoMsg(object: _122.BlockMetaAminoMsg): _122.BlockMeta;
            fromProtoMsg(message: _122.BlockMetaProtoMsg): _122.BlockMeta;
            toProto(message: _122.BlockMeta): Uint8Array;
            toProtoMsg(message: _122.BlockMeta): _122.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            is(o: any): o is _122.TxProof;
            isSDK(o: any): o is _122.TxProofSDKType;
            isAmino(o: any): o is _122.TxProofAmino;
            encode(message: _122.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.TxProof;
            fromPartial(object: Partial<_122.TxProof>): _122.TxProof;
            fromAmino(object: _122.TxProofAmino): _122.TxProof;
            toAmino(message: _122.TxProof): _122.TxProofAmino;
            fromAminoMsg(object: _122.TxProofAminoMsg): _122.TxProof;
            fromProtoMsg(message: _122.TxProofProtoMsg): _122.TxProof;
            toProto(message: _122.TxProof): Uint8Array;
            toProtoMsg(message: _122.TxProof): _122.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _121.ConsensusParams;
            isSDK(o: any): o is _121.ConsensusParamsSDKType;
            isAmino(o: any): o is _121.ConsensusParamsAmino;
            encode(message: _121.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _121.ConsensusParams;
            fromPartial(object: Partial<_121.ConsensusParams>): _121.ConsensusParams;
            fromAmino(object: _121.ConsensusParamsAmino): _121.ConsensusParams;
            toAmino(message: _121.ConsensusParams): _121.ConsensusParamsAmino;
            fromAminoMsg(object: _121.ConsensusParamsAminoMsg): _121.ConsensusParams;
            fromProtoMsg(message: _121.ConsensusParamsProtoMsg): _121.ConsensusParams;
            toProto(message: _121.ConsensusParams): Uint8Array;
            toProtoMsg(message: _121.ConsensusParams): _121.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _121.BlockParams;
            isSDK(o: any): o is _121.BlockParamsSDKType;
            isAmino(o: any): o is _121.BlockParamsAmino;
            encode(message: _121.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _121.BlockParams;
            fromPartial(object: Partial<_121.BlockParams>): _121.BlockParams;
            fromAmino(object: _121.BlockParamsAmino): _121.BlockParams;
            toAmino(message: _121.BlockParams): _121.BlockParamsAmino;
            fromAminoMsg(object: _121.BlockParamsAminoMsg): _121.BlockParams;
            fromProtoMsg(message: _121.BlockParamsProtoMsg): _121.BlockParams;
            toProto(message: _121.BlockParams): Uint8Array;
            toProtoMsg(message: _121.BlockParams): _121.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            is(o: any): o is _121.EvidenceParams;
            isSDK(o: any): o is _121.EvidenceParamsSDKType;
            isAmino(o: any): o is _121.EvidenceParamsAmino;
            encode(message: _121.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _121.EvidenceParams;
            fromPartial(object: Partial<_121.EvidenceParams>): _121.EvidenceParams;
            fromAmino(object: _121.EvidenceParamsAmino): _121.EvidenceParams;
            toAmino(message: _121.EvidenceParams): _121.EvidenceParamsAmino;
            fromAminoMsg(object: _121.EvidenceParamsAminoMsg): _121.EvidenceParams;
            fromProtoMsg(message: _121.EvidenceParamsProtoMsg): _121.EvidenceParams;
            toProto(message: _121.EvidenceParams): Uint8Array;
            toProtoMsg(message: _121.EvidenceParams): _121.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            is(o: any): o is _121.ValidatorParams;
            isSDK(o: any): o is _121.ValidatorParamsSDKType;
            isAmino(o: any): o is _121.ValidatorParamsAmino;
            encode(message: _121.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _121.ValidatorParams;
            fromPartial(object: Partial<_121.ValidatorParams>): _121.ValidatorParams;
            fromAmino(object: _121.ValidatorParamsAmino): _121.ValidatorParams;
            toAmino(message: _121.ValidatorParams): _121.ValidatorParamsAmino;
            fromAminoMsg(object: _121.ValidatorParamsAminoMsg): _121.ValidatorParams;
            fromProtoMsg(message: _121.ValidatorParamsProtoMsg): _121.ValidatorParams;
            toProto(message: _121.ValidatorParams): Uint8Array;
            toProtoMsg(message: _121.ValidatorParams): _121.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            is(o: any): o is _121.VersionParams;
            isSDK(o: any): o is _121.VersionParamsSDKType;
            isAmino(o: any): o is _121.VersionParamsAmino;
            encode(message: _121.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _121.VersionParams;
            fromPartial(object: Partial<_121.VersionParams>): _121.VersionParams;
            fromAmino(object: _121.VersionParamsAmino): _121.VersionParams;
            toAmino(message: _121.VersionParams): _121.VersionParamsAmino;
            fromAminoMsg(object: _121.VersionParamsAminoMsg): _121.VersionParams;
            fromProtoMsg(message: _121.VersionParamsProtoMsg): _121.VersionParams;
            toProto(message: _121.VersionParams): Uint8Array;
            toProtoMsg(message: _121.VersionParams): _121.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            is(o: any): o is _121.HashedParams;
            isSDK(o: any): o is _121.HashedParamsSDKType;
            isAmino(o: any): o is _121.HashedParamsAmino;
            encode(message: _121.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _121.HashedParams;
            fromPartial(object: Partial<_121.HashedParams>): _121.HashedParams;
            fromAmino(object: _121.HashedParamsAmino): _121.HashedParams;
            toAmino(message: _121.HashedParams): _121.HashedParamsAmino;
            fromAminoMsg(object: _121.HashedParamsAminoMsg): _121.HashedParams;
            fromProtoMsg(message: _121.HashedParamsProtoMsg): _121.HashedParams;
            toProto(message: _121.HashedParams): Uint8Array;
            toProtoMsg(message: _121.HashedParams): _121.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _120.Evidence;
            isSDK(o: any): o is _120.EvidenceSDKType;
            isAmino(o: any): o is _120.EvidenceAmino;
            encode(message: _120.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _120.Evidence;
            fromPartial(object: Partial<_120.Evidence>): _120.Evidence;
            fromAmino(object: _120.EvidenceAmino): _120.Evidence;
            toAmino(message: _120.Evidence): _120.EvidenceAmino;
            fromAminoMsg(object: _120.EvidenceAminoMsg): _120.Evidence;
            fromProtoMsg(message: _120.EvidenceProtoMsg): _120.Evidence;
            toProto(message: _120.Evidence): Uint8Array;
            toProtoMsg(message: _120.Evidence): _120.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            is(o: any): o is _120.DuplicateVoteEvidence;
            isSDK(o: any): o is _120.DuplicateVoteEvidenceSDKType;
            isAmino(o: any): o is _120.DuplicateVoteEvidenceAmino;
            encode(message: _120.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _120.DuplicateVoteEvidence;
            fromPartial(object: Partial<_120.DuplicateVoteEvidence>): _120.DuplicateVoteEvidence;
            fromAmino(object: _120.DuplicateVoteEvidenceAmino): _120.DuplicateVoteEvidence;
            toAmino(message: _120.DuplicateVoteEvidence): _120.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _120.DuplicateVoteEvidenceAminoMsg): _120.DuplicateVoteEvidence;
            fromProtoMsg(message: _120.DuplicateVoteEvidenceProtoMsg): _120.DuplicateVoteEvidence;
            toProto(message: _120.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _120.DuplicateVoteEvidence): _120.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            is(o: any): o is _120.LightClientAttackEvidence;
            isSDK(o: any): o is _120.LightClientAttackEvidenceSDKType;
            isAmino(o: any): o is _120.LightClientAttackEvidenceAmino;
            encode(message: _120.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _120.LightClientAttackEvidence;
            fromPartial(object: Partial<_120.LightClientAttackEvidence>): _120.LightClientAttackEvidence;
            fromAmino(object: _120.LightClientAttackEvidenceAmino): _120.LightClientAttackEvidence;
            toAmino(message: _120.LightClientAttackEvidence): _120.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _120.LightClientAttackEvidenceAminoMsg): _120.LightClientAttackEvidence;
            fromProtoMsg(message: _120.LightClientAttackEvidenceProtoMsg): _120.LightClientAttackEvidence;
            toProto(message: _120.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _120.LightClientAttackEvidence): _120.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            is(o: any): o is _120.EvidenceList;
            isSDK(o: any): o is _120.EvidenceListSDKType;
            isAmino(o: any): o is _120.EvidenceListAmino;
            encode(message: _120.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _120.EvidenceList;
            fromPartial(object: Partial<_120.EvidenceList>): _120.EvidenceList;
            fromAmino(object: _120.EvidenceListAmino): _120.EvidenceList;
            toAmino(message: _120.EvidenceList): _120.EvidenceListAmino;
            fromAminoMsg(object: _120.EvidenceListAminoMsg): _120.EvidenceList;
            fromProtoMsg(message: _120.EvidenceListProtoMsg): _120.EvidenceList;
            toProto(message: _120.EvidenceList): Uint8Array;
            toProtoMsg(message: _120.EvidenceList): _120.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            is(o: any): o is _119.Block;
            isSDK(o: any): o is _119.BlockSDKType;
            isAmino(o: any): o is _119.BlockAmino;
            encode(message: _119.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _119.Block;
            fromPartial(object: Partial<_119.Block>): _119.Block;
            fromAmino(object: _119.BlockAmino): _119.Block;
            toAmino(message: _119.Block): _119.BlockAmino;
            fromAminoMsg(object: _119.BlockAminoMsg): _119.Block;
            fromProtoMsg(message: _119.BlockProtoMsg): _119.Block;
            toProto(message: _119.Block): Uint8Array;
            toProtoMsg(message: _119.Block): _119.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            is(o: any): o is _124.App;
            isSDK(o: any): o is _124.AppSDKType;
            isAmino(o: any): o is _124.AppAmino;
            encode(message: _124.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.App;
            fromPartial(object: Partial<_124.App>): _124.App;
            fromAmino(object: _124.AppAmino): _124.App;
            toAmino(message: _124.App): _124.AppAmino;
            fromAminoMsg(object: _124.AppAminoMsg): _124.App;
            fromProtoMsg(message: _124.AppProtoMsg): _124.App;
            toProto(message: _124.App): Uint8Array;
            toProtoMsg(message: _124.App): _124.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            is(o: any): o is _124.Consensus;
            isSDK(o: any): o is _124.ConsensusSDKType;
            isAmino(o: any): o is _124.ConsensusAmino;
            encode(message: _124.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.Consensus;
            fromPartial(object: Partial<_124.Consensus>): _124.Consensus;
            fromAmino(object: _124.ConsensusAmino): _124.Consensus;
            toAmino(message: _124.Consensus): _124.ConsensusAmino;
            fromAminoMsg(object: _124.ConsensusAminoMsg): _124.Consensus;
            fromProtoMsg(message: _124.ConsensusProtoMsg): _124.Consensus;
            toProto(message: _124.Consensus): Uint8Array;
            toProtoMsg(message: _124.Consensus): _124.ConsensusProtoMsg;
        };
    };
}
